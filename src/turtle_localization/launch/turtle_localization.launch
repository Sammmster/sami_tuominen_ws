<launch>
    <node pkg="turtlesim" type="turtlesim_node" name="turtlesim"/>
    <node pkg="turtlesim" type="turtle_teleop_key" name="teleop" output="screen"/>
    <node pkg="turtle_localization" type="turtle_odometry.py" name="turtle1_odometry" output="screen"/>
    <node pkg="turtle_localization" type="turtle2_noisy.py" name="turtle2_cmd" output="screen"/>
    <node pkg="turtle_localization" type="turtle3_filtered.py" name="turtle3_cmd" output="screen"/>
    <node pkg="robot_localization" type="ekf_localization_node" name="turtle_localization">
        
        <param name="frequency" value="10"/>  <!--filtteri päivittää itseään 10x sekunnissa -->
        <param name="sensor_timeout" value="0.2"/> <!--kuinka kauan odotetaan myöhästynyttä sensoridataa-->
        <param name="two_d_mode" value="true"/> <!--liikkuuko robotti 2 ulotteisessa tasossa-->
        <param name="publish_tf" value="true"/> <!--julkaiseeko filtteri tf koordinaatio järjestelmään-->
        <param name="map_frame" value="map"/>
        <param name="odom_frame" value="odom"/>
        <param name="world_frame" value="odom"/>
        <param name="base_link_frame" value="base_link"/>
        <param name="print_diagnostics" value="true"/>
        <remap from="odometry/filtered" to="odometry/filtered_twist"/><!--vaihdetaan ulostulojen topic-->
        <param name="twist0" value="turtle1/sensor/twist"/>
        <param name="twist0_differential" value="true"/>
        <rosparam param="twist0_config">[false,false,false,
                                        false,false,false,
                                        true,false,false,
                                        false,false,true,
                                        false,false,false]
        </rosparam>
        <!--x,y,z,roll,pitch,yaw,x*,y*,z*,roll*,pitch*,yaw*,x**,y**,z**... paikka, nopeus, kiihtyvyys-->
        </node>
</launch>